# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Start Test

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

permissions:
  contents: read

jobs:
  lab_1:
    name: Run first Lab
    runs-on: ubuntu-latest
    steps:
      - name: First
        run: echo "First"
      - name: Failing step
        id: demo
        run: exit 1
      - name: The demo step has failed
        if: ${{ failure() && steps.demo.conclusion == 'failure' }}
        run: |
          echo "попередній крок не виконався"
  
  lab_4:
    name: Run Second Lab
    runs-on: ubuntu-latest
    needs: lab_1
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Git Sync
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name:
      run: |
        cd 4_lab/
        python lab.py
  
  lab_5:
    name: Apply test to Lab 5
    runs-on: ubuntu-latest
    needs: lab_1
    steps:
    - name: Git Sync
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        cd 5_lab/
        # stop the build if there are Python syntax errors or undefined names
        echo "Кількість помилок:"
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        echo "Кількість зауважень до форматування:"
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        cd 5_lab/
        pytest tests.py -v
    - name: Finish
      run: |
        cd 5_lab/
        python ./lab.py
        echo "Ми завершили тестування. Лабораторна 5 працює!"

